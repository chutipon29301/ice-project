version: 2
jobs:
  # backend
  test_backend:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-dependencies-v1.0-{{ .Branch }}-{{ checksum "backend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - backend-dependencies-v1.0-{{ .Branch }}
            - backend-dependencies-v1.0
      - run:
          name: Install dependencies
          command: |
            cd backend
            yarn
      - run:
          name: Run test
          command: |
            cd backend
            yarn test
      - save_cache:
          paths:
            - backend/node_modules
          key: backend-dependencies-v1.0-{{ .Branch }}-{{ checksum "backend/package.json" }}

  build_backend:
    machine: true
    steps:
      - checkout
      - run:
          name: Build backend
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --force-rm
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export USERNAME="$DOCKER_HUB_USERNAME"' >> $BASH_ENV
            echo 'export PASSWORD="$DOCKER_HUB_PASSWORD"' >> $BASH_ENV
      - run:
          name: Push to Docker hub
          command: |
            echo ${PASSWORD} | docker login -u ${USERNAME} --password-stdin
            docker tag iceprojectbackend:latest ${USERNAME}/iceprojectbackend:latest
            docker push ${USERNAME}/iceprojectbackend:latest

  deploy_backend:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Setup environment variables
          command: |
            echo 'export GIT_USERNAME="$CIRCLE_PROJECT_USERNAME"' >> $BASH_ENV
            echo 'export GIT_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
            echo 'export USERNAME="$DOCKER_HUB_USERNAME"' >> $BASH_ENV
            echo 'export ENCRYPTED_KEY="$GCP_ENCRYPTED_KEY"' >> $BASH_ENV
            echo 'export PROJECT_ID="$GCP_PROJECT_ID"' >> $BASH_ENV
            echo 'export ZONE="$GCP_ZONE"' >> $BASH_ENV
            echo 'export MYSQL_DATABASE="$ICE_MYSQL_DATABASE"' >> $BASH_ENV
            echo 'export MYSQL_USER="$ICE_MYSQL_USER"' >> $BASH_ENV
            echo 'export MYSQL_PASSWORD="$ICE_MYSQL_PASSWORD"' >> $BASH_ENV
            echo 'export MYSQL_ROOT_PASSWORD="$ICE_MYSQL_ROOT_PASSWORD"' >> $BASH_ENV
            echo 'export SERVER_URL="$ICE_SERVER_URL"' >> $BASH_ENV
            echo 'export CHANNEL_ID="$ICE_CHANNEL_ID"' >> $BASH_ENV
            echo 'export CHANNEL_SECRET="$ICE_CHANNEL_SECRET"' >> $BASH_ENV
            echo 'export IOT_DEVICE_SECRET="$ICE_IOT_DEVICE_SECRET"' >> $BASH_ENV
            echo 'export LINE_MESSAGING_API_ENDPOINT="$ICE_LINE_MESSAGING_API_ENDPOINT"' >> $BASH_ENV
            echo 'export CHANNEL_ACCESS_TOKEN="$ICE_CHANNEL_ACCESS_TOKEN"' >> $BASH_ENV
            echo 'export NGINX_FILES_PATH="$ICE_NGINX_FILES_PATH"' >> $BASH_ENV
            echo 'export NGINX_VIRTUAL_HOST="$ICE_NGINX_VIRTUAL_HOST"' >> $BASH_ENV
            echo 'export BACKEND_VIRTUAL_HOST="$ICE_BACKEND_VIRTUAL_HOST"' >> $BASH_ENV
            echo 'export LETSENCRYPT_EMAIL="$ICE_LETSENCRYPT_EMAIL"' >> $BASH_ENV
      - run:
          name: Clone from Git to VM
          command: |
            echo ${ENCRYPTED_KEY} > encrypted-key.txt
            base64 -i encrypted-key.txt -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $PROJECT_ID --zone $ZONE instance-1 -- \
            "sudo rm -rf ice-project && git clone https://github.com/${GIT_USERNAME}/ice-project.git -b develop"
      - run:
          name: Create and transfer .env over ssh
          command: |
            eval "echo \"$(< .env.template.prod)\"" > .env
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute scp --project $PROJECT_ID ./.env instance-1:~/ice-project
      - run:
          name: Pull from Docker hub
          command: |
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $PROJECT_ID --zone $ZONE instance-1 -- \
            "cd ice-project && \
            docker pull ${USERNAME}/iceprojectbackend:latest && \
            docker tag ${USERNAME}/iceprojectbackend:latest iceprojectbackend:latest && \
            docker image prune -f"
      - run:
          name: Deploy backend
          command: |
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $PROJECT_ID --zone $ZONE instance-1 -- \
            "cd ice-project && \
            bash ./run-docker-compose-up.sh"

  # frontend          
  build_liff:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - liff-dependencies-v1.0-{{ .Branch }}-{{ checksum "liff/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - liff-dependencies-v1.0-{{ .Branch }}
            - liff-dependencies-v1.0
      - run:
          name: Install dependencies
          command: |
            cd liff
            yarn
      - save_cache:
          paths:
            - liff/node_modules
          key: liff-dependencies-v1.0-{{ .Branch }}-{{ checksum "backend/package.json" }}
      - run:
          name: Build liff frontend
          command: |
            cd liff
            yarn build
      - store_artifacts:
          path: liff/build
  deploy_liff:
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Setup environment variables
          command: |
            echo 'export GIT_USERNAME="$CIRCLE_PROJECT_USERNAME"' >> $BASH_ENV
            echo 'export GIT_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
            echo 'export BUILD_NUM="CIRCLE_BUILD_NUM"' >> $BASH_ENV
            echo 'export USERNAME="$DOCKER_HUB_USERNAME"' >> $BASH_ENV
            echo 'export ENCRYPTED_KEY="$GCP_ENCRYPTED_KEY"' >> $BASH_ENV
            echo 'export PROJECT_ID="$GCP_PROJECT_ID"' >> $BASH_ENV
            echo 'export ZONE="$GCP_ZONE"' >> $BASH_ENV
      - run:
          name: Download artifact
          command: |
            export CIRCLE_TOKEN="${LIFF_ARTIFACT_TOKEN}"
            curl https://circleci.com/api/v1.1/project/github/${GIT_USERNAME}/ice-project/latest/artifacts?circle-token=${CIRCLE_TOKEN}&branch=${GIT_BRANCH} | grep -o 'https://[^"]*' > artifacts.txt
            <artifacts.txt xargs -P4 -I % wget %?circle-token=${CIRCLE_TOKEN}   
            ls
      - run:
          name: Transfer build folder over ssh
          command: |
            echo ${ENCRYPTED_KEY} > encrypted-key.txt
            base64 -i encrypted-key.txt -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute scp --project $PROJECT_ID ./build instance-1:~/ice-project/liff
      
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_liff
      - deploy_liff:
          requires:
            - build_liff
