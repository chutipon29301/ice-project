version: 2
jobs:
  # backend
  test_backend:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-dependencies-v1.0-{{ .Branch }}-{{ checksum "backend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - backend-dependencies-v1.0-{{ .Branch }}
            - backend-dependencies-v1.0
      - run:
          name: Install dependencies
          command: |
            cd backend
            yarn
      - run:
          name: Run test
          command: |
            cd backend
            yarn test
      - save_cache:
          paths:
            - backend/node_modules
          key: backend-dependencies-v1.0-{{ .Branch }}-{{ checksum "backend/package.json" }}

  build_backend:
    machine: true
    steps:
      - checkout
      - run:
          name: Build backend
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --force-rm
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export USERNAME="$DOCKER_HUB_USERNAME"' >> $BASH_ENV
            echo 'export PASSWORD="$DOCKER_HUB_PASSWORD"' >> $BASH_ENV
      - run:
          name: Push to Docker hub
          command: |
            echo ${PASSWORD} | docker login -u ${USERNAME} --password-stdin
            docker tag iceprojectbackend:latest ${USERNAME}/iceprojectbackend:latest
            docker push ${USERNAME}/iceprojectbackend:latest

  deploy_backend:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Setup environment variables
          command: |
            echo 'export GIT_USERNAME="$CIRCLE_PROJECT_USERNAME"' >> $BASH_ENV
            echo 'export GIT_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
            echo 'export USERNAME="$DOCKER_HUB_USERNAME"' >> $BASH_ENV
      - run:
          name: Stop and delete containers and volumes
          command: |
            echo ${GCP_ENCRYPTED_KEY} > encrypted-key.txt
            base64 -i encrypted-key.txt -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE instance-1 -- \
            '[ -z "$(docker ps -aq)"] || (docker stop $(docker ps -a -q) && docker volume prune -f)'
      - run:
          name: Clone from Git to VM
          command: |
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE instance-1 -- \
            "([ -d ice-project ] && \
            (cd ice-project && git fetch --all && git reset --hard origin/develop) || \
            (git clone https://github.com/${GIT_USERNAME}/ice-project.git -b develop))"
      - run:
          name: Create and transfer .env over scp
          command: |
            eval "echo \"$(< .env.template.prod)\"" > .env
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute scp --project $GCP_PROJECT_ID --zone $GCP_ZONE ./.env instance-1:~/ice-project
      - run:
          name: Pull from Docker hub
          command: |
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE instance-1 -- \
            "cd ice-project ; \
            docker pull ${USERNAME}/iceprojectbackend:latest ; \
            docker tag ${USERNAME}/iceprojectbackend:latest iceprojectbackend:latest ; \
            docker image prune -f"
      - run:
          name: Deploy backend
          command: |
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE instance-1 -- \
            'cd ice-project ; \
            ([ -d public ] || mkdir public) ; \
            bash ./run-docker-compose-up.sh'

  # liff - requires backend to finish building and deploying   
  build_liff:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - liff-dependencies-v1.0-{{ .Branch }}-{{ checksum "liff/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - liff-dependencies-v1.0-{{ .Branch }}
            - liff-dependencies-v1.0
      - run:
          name: Install dependencies
          command: |
            cd liff
            yarn
      - save_cache:
          paths:
            - liff/node_modules
          key: liff-dependencies-v1.0-{{ .Branch }}-{{ checksum "backend/package.json" }}
      - run:
          name: Build liff frontend
          command: |
            cd liff
            yarn build
      - persist_to_workspace:
          root: liff/build
          paths:
            - .

  deploy_liff:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: liff
      - run:
          name: Setup environment variables
          command: |
            echo 'export USERNAME="$DOCKER_HUB_USERNAME"' >> $BASH_ENV
      - run:
          name: Transfer build folder over scp
          command: |
            echo ${GCP_ENCRYPTED_KEY} > encrypted-key.txt
            base64 -i encrypted-key.txt -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE instance-1 -- "sudo rm -rf ice-project/public/liff"
            gcloud compute scp --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE --recurse ./liff instance-1:~/ice-project/public

  # admin - requires backend to finish building and deploying
  build_admin:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - admin-dependencies-v1.0-{{ .Branch }}-{{ checksum "admin/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - admin-dependencies-v1.0-{{ .Branch }}
            - admin-dependencies-v1.0
      - run:
          name: Install dependencies
          command: |
            cd admin
            sudo yarn
      - save_cache:
          paths:
            - admin/node_modules
          key: admin-dependencies-v1.0-{{ .Branch }}-{{ checksum "admin/package.json" }}
      - run:
          name: Build admin frontend
          command: |
            cd admin
            sudo yarn ng build --prod
      - persist_to_workspace:
          root: admin/dist
          paths:
            - .

  deploy_admin:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: admin
      - run:
          name: Setup environment variables
          command: |
            echo 'export USERNAME="$DOCKER_HUB_USERNAME"' >> $BASH_ENV
      - run:
          name: Transfer build folder over scp
          command: |
            echo ${GCP_ENCRYPTED_KEY} > encrypted-key.txt
            base64 -i encrypted-key.txt -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud compute ssh --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE instance-1 -- "sudo rm -rf ice-project/public/admin"
            gcloud compute scp --quiet --project $GCP_PROJECT_ID --zone $GCP_ZONE --recurse ./admin instance-1:~/ice-project/public
      

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_backend
      - build_liff
      - build_admin
      - deploy_backend:
          requires:
            - build_backend
      - deploy_liff:
          requires:
            - deploy_backend
            - build_liff
      - deploy_admin:
          requires:
            - deploy_backend
            - build_admin